swagger: "2.0"
info:
  version: "0.0.1"
  title: Medical App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /medicalapp
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /authdoc:
    # binds a127 app logic to a route
    x-swagger-router-controller: authentication
    post:
      description: Returns true if user is authorized to write to the database
      # used as the method name of the controller
      operationId: authdoc
      parameters:
        - name: user
          in: body
          description: The user object of the user to authenticate
          required: true
          schema:
            required:
              - username
              - password
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/DoctorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /drugs:
    x-swagger-router-controller: operations
    post:
      description: Add drug to database
      operationId: add_drug
      parameters:
        - name: drug
          in: body
          description: The drug object of the drug to insert into the db
          required: true
          schema:
            $ref: "#/definitions/DrugSchema"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/DoctorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Get all drugs from the database
      operationId: get_drugs
      parameters:
        - name: limit
          in: query
          description: max records to return
          required: false
          type: integer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/DrugsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /drug:
    x-swagger-router-controller: operations
    post:
      description: Delete drug from database
      operationId: delete_drug
      parameters:
        - name: id
          in: body
          description: The id of the drug to delete from the db
          required: true
          schema:
            required:
              - drugId
            properties:
              drugId:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/DoctorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /logout:
    x-swagger-router-controller: authentication
    post:
      description: Handles client logging out
      operationId: logout
      parameters:
        - name: username
          in: body
          description: The user object of the user to authenticate
          required: true
          schema:
            required:
              - username
            properties:
              username:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/DoctorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  DoctorResponse:
    required:
      - message
    properties:
      message:
        type: string
  DrugSchema:
    required:
      - drugName
      - drugClass
      - drugRegulation
      - drugSymptoms
      - drugInteractions
      - drugDosage
      - username
      - date
    properties:
      drugName:
        type: string
      drugClass:
        type: string
      drugRegulation:
        type: string
      drugSymptoms:
        type: string
      drugInteractions:
        type: string
      drugDosage:
        type: string
      username:
        type: string
      date:
        type: string
        format: date
  DrugsResponse:
    required:
      - drugs
    properties:
      drugs:
        type: array
        items: {}
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
